users/user_id:
  post:
    security: []
    tags:
      - user
    summary: 新しいアカウントを登録する
    operationId: createUser
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: ユーザのID
              user_name:
                type: string
                description: ユーザの名前
              user_role:
                type: string
                enum: [child, parent, general]
                description: ユーザのロール
              password:
                type: string
                description: 親ユーザのパスワード
            required:
              - user_name
    responses:
      '201':
        description: アカウントの登録に成功
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              example1:
                $ref: '#/components/examples/ExampleUser'
      '400':
        description: 入力が無効
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              message: 'Bad Request'
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              message: 'Internal Server Error'

  get:
    security: []
    tags:
      - user
    summary: 特定のユーザ情報を取得する
    description: 指定された'user_id'に紐づくユーザ情報を取得する
    operationId: getUser
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: ユーザ情報の取得に成功
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              example1:
                $ref: '#/components/examples/ExampleUser'
      '404':
        description: ユーザ情報が見つかりません
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              message: 'Not Found'
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              message: 'Internal Server Error'

  put:
    security: []
    tags:
      - user
    summary: ユーザ情報を更新する
    description: 指定された'user_id'に紐づくユーザ情報を更新する
    operationId: updateUser
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              password:
                type: string
                description: 親ユーザの新しいパスワード
              user_role:
                type: string
                enum: [child, parent, general]
                description: ユーザの新しいロール
    responses:
      '200':
        description: ユーザ情報の更新に成功
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              example1:
                $ref: '#/components/examples/ExampleUser'
      '404':
        description: ユーザ情報が見つかりません
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              message: 'Not Found'
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              message: 'Internal Server Error'

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザのID
        pet_id:
          type: string
          description: ペットのID
        user_name:
          type: string
          description: ユーザの名前
        user_role:
          type: string
          enum: [child, parent, general]
          description: ユーザのロール
        password:
          type: string
          description: ユーザのパスワード
        created_at:
          type: string
          format: date-time
          description: 作られた日時
        updated_at:
          type: string
          format: date-time
          description: 更新された日時

    Error:
      type: object
      properties:
        message:
          type: string
          description: エラーメッセージ

  examples:
    ExampleUser:
      value:
        user_id: '08502f5a-4452-4b8b-8038-68b0b5f8c3d2'
        pet_id: 'cfea3ecc-7250-4ccf-a41d-ea7f896a9cc5'
        user_name: '星野空'
        user_role: 'child'
        password: '1234'
        created_at: '2025-06-15T10:00:00Z'
        updated_at: '2025-06-15T10:00:00Z'
